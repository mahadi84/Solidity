


01. How many Data Types are there in Solidity? What are the differences among them?
02. How many types of Variables are there? Differences/Advantages among State, Local, and Global Varibale? Where data of local variables are stored?
03. What is Visibility Private, Public and Internal?
04. What is Array and how it works? how to define Array Push?
05. How does IF...ELSE statement work? How to define a Tenary operator?
06. Loop: FOR
07. How to define CONSTRUCT() 
08. How to return multiple values?

09. Difference among Required, Revert, and Assert?

10. How to receive data from FORM and VALIDATE it?


=================== 01. How many Data Types are there in Solidity? What are the differences among them? =============================

bool              -Boolean		true/false
int/uint          -Integer		Signed and unsigned integers of varying sizes.
int8 to int256    -Integer		Signed int from 8 bits to 256 bits. int256 is the same as int.
uint8 to uint256  -Integer		Unsigned int from 8 bits to 256 bits. uint256 is the same as uint.
fixed/unfixed     -Fixed Point Numbers		Signed and unsigned fixed point numbers of varying sizes.
fixed/unfixed     -Fixed Point Numbers		Signed and unsigned fixed point numbers of varying sizes.
fixedMxN          -Fixed Point Numbers		Signed fixed point number where M represents number of bits taken by type and N represents the 
address           -address holds the 20 byte value representing the size of an Ethereum address. An address can be used to get the balance using .balance method and can be used to transfer balance to another address using .transfer method.


=================== 02. How many types of Variables are there? Differences/Advantages among State, Local, and Global Varibale? Where data of local variables are stored? =============================
State Variables − Variables whose values are permanently stored in a contract storage.
Local Variables − Variables whose values are present till function is executing.
Global Variables − Special variables exists in the global namespace used to get information about the 


=================== 03. What is Visibility Private, Public and Internal? ==========================================
Public: Public variables are accessible both within the contract and from external contracts. Solidity automatically generates a getter function for public state variables.
Private: Private variables are only accessible within the contract where they are defined. They remain hidden from derived contracts or external contracts.
Internal: Internal variables are accessible within the contract where they are defined and also from derived contracts. However, they are not accessible from external contracts.
External: External functions can only be called externally (from outside the contract). They cannot be accessed within the contract itself.

=================== 04. What is Array and how it work? how to define Array Push? =============================
Fixed-size arrays: Declared with a specific size.
uint[5] fixedArray;  // An array of 5 unsigned integers

Dynamic arrays: Declared without a specific size.
uint[] dynamicArray;  // A dynamic array of unsigned integers
dynamicArray.push(1);  // Adds 1 to the array
dynamicArray.push(2);  // Adds 2 to the array




=================== 05. How does IF...ELSE statement work? How to define a Tenary operator? =============================
contract IfElseExample {
    function checkValue(uint value) public pure returns (string memory) {
        if (value < 10) {
            return "Value is less than 10";
        } else if (value == 10) {
            return "Value is 10";
        } else {
            return "Value is greater than 10";
        }
    }
}
---
contract TernaryOperatorExample {
    function getValue(uint value) public pure returns (string memory) {
        return value < 10 ? "Less than 10" : "10 or greater";
    }
}
=================== 06. FOR Loop =============================
contract ForLoopExample {
    function sumOfNumbers(uint n) public pure returns (uint) {
        uint sum = 0;
        for (uint i = 1; i <= n; i++) {
            sum += i;
        }
        return sum;
    }
}

=================== 07. How to define CONSTRUCT() ==========================================================
contract Token {
    string public name; // State variables
    constructor(string memory _name) {
        name = _name;
    }
}
=================== 08. How to return multiple values? ============================================
contract StructReturnExample {

    struct Person {     // Define a struct
        string name;
        uint age;
    }

    function getPerson() public pure returns (Person memory) {     // Function that returns a struct
        return Person("Alice", 30);
    }

    function useReturnedStruct() public pure returns (string memory, uint) {      // Function that uses the returned struct
        Person memory person = getPerson();
        return (person.name, person.age);
    }
=================== 09. Difference among Required, Revert, and Assert? =============================

=================== 10. How to receive data from FORM and VALIDATE it? =============================
